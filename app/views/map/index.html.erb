<% content_for :title, "Find CFOs on the Map" %>

<% content_for :head do %>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
  
  <style>
    #map {
      height: 70vh;
      width: 100%;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      z-index: 1; /* Ensure proper z-index for the map */
    }
    .leaflet-popup-content-wrapper {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 0.5rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    .leaflet-popup-content {
      margin: 0.75rem 1rem;
      min-width: 200px;
    }
    .leaflet-popup-content h3 {
      font-size: 1.125rem;
      font-weight: 600;
      margin-top: 0;
      margin-bottom: 0.25rem;
      color: #1F2937;
    }
    .leaflet-popup-content p {
      font-size: 0.875rem;
      color: #4B5563;
      margin-bottom: 0.5rem;
    }
    .leaflet-popup-content .location {
      display: flex;
      align-items: center;
      font-size: 0.875rem;
      color: #6B7280;
    }
    .leaflet-popup-content .location svg {
      margin-right: 0.25rem;
    }
    .leaflet-popup-content .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem;
      margin-top: 0.5rem;
    }
    .leaflet-popup-content .tag {
      background-color: #EFF6FF;
      color: #3B82F6;
      font-size: 0.75rem;
      padding: 0.125rem 0.5rem;
      border-radius: 9999px;
    }
    .leaflet-popup-content .view-profile {
      margin-top: 0.75rem;
      padding-top: 0.5rem;
      border-top: 1px solid #E5E7EB;
      display: flex;
      align-items: center;
    }
    .leaflet-popup-content .view-profile a {
      color: #3B82F6;
      font-size: 0.875rem;
      font-weight: 500;
      text-decoration: none;
      display: flex;
      align-items: center;
    }
    .leaflet-popup-content .view-profile a:hover {
      color: #2563EB;
    }
    .leaflet-popup-content .view-profile a svg {
      margin-left: 0.25rem;
    }
    .custom-marker-podcast {
      background-color: #4F46E5;
      display: block;
      border-radius: 50%;
      border: 2px solid white;
      box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    }
    .custom-marker-regular {
      background-color: #3B82F6;
      display: block;
      border-radius: 50%;
      border: 2px solid white;
      box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    }
  </style>
<% end %>

<div class="container mx-auto px-4 py-8 mt-16">
  <header class="mb-8 text-center">
    <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">Find CFOs Near You</h1>
    <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
      Explore our network of Fractional CFOs and find professionals in your area
    </p>
  </header>
  
  <!-- Filters Section -->
  <div class="bg-white dark:bg-gray-800 shadow-md rounded-lg p-6 mb-8">
    <%= form_with url: map_path, method: :get, class: "space-y-4" do |f| %>
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <!-- Specialization filter -->
        <div>
          <label for="specialization_id" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
            Specialization
          </label>
          <%= select_tag :specialization_id, 
              options_for_select([["All Specializations", ""]] + @specializations.map { |s| [s.name, s.id] }, params[:specialization_id]), 
              class: "block w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-900 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-2 px-3" %>
        </div>
        
        <!-- Guest filter -->
        <div>
          <label for="guest_filter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
            Guest Status
          </label>
          <%= select_tag :guest_filter, 
              options_for_select([
                ["All Profiles", ""], 
                ["Podcast Guests", "podcast_guests"], 
                ["Interested in Procurement", "procurement"]
              ], params[:guest_filter]), 
              class: "block w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-900 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-2 px-3" %>
        </div>

        <!-- Filter button -->
        <div class="flex items-end">
          <%= f.submit "Apply Filters", class: "w-full md:w-auto px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
          <% if params[:specialization_id].present? || params[:guest_filter].present? %>
            <%= link_to "Clear Filters", map_path, class: "ml-2 px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600" %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
  
  <!-- Results Stats -->
  <div class="flex justify-between items-center mb-6">
    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">
      <%= @profiles.count %> CFOs found on the map
      <% if params[:specialization_id].present? || params[:guest_filter].present? %>
        <span class="text-sm font-normal text-gray-500 dark:text-gray-400">with applied filters</span>
      <% end %>
    </h2>
    
    <!-- View option links -->
    <div class="text-gray-600 dark:text-gray-400">
      <%= link_to profiles_path(params.permit(:specialization_id, :guest_filter)), class: "inline-flex items-center mr-4" do %>
        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
        </svg>
        List View
      <% end %>
      
      <%= link_to map_path(params.permit(:specialization_id, :guest_filter)), class: "inline-flex items-center text-blue-600 dark:text-blue-400 font-medium" do %>
        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"></path>
        </svg>
        Map View
      <% end %>
    </div>
  </div>
  
  <!-- Map Container -->
  <div id="map" class="mb-8">
    <!-- Loading state - will be replaced by the map -->
    <div class="flex items-center justify-center h-70vh bg-gray-100 dark:bg-gray-800 rounded-lg">
      <div class="text-center p-8">
        <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mb-4"></div>
        <p class="text-gray-600 dark:text-gray-400">Loading map...</p>
      </div>
    </div>
  </div>
  
  <!-- No profiles message for empty state -->
  <% if @profiles.empty? %>
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-8 text-center mt-8">
      <div class="mx-auto h-24 w-24 text-gray-400 dark:text-gray-600">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <h3 class="mt-2 text-lg font-medium text-gray-900 dark:text-white">No profiles with location data found</h3>
      <p class="mt-1 text-gray-500 dark:text-gray-400">
        We couldn't find any profiles with geocoded locations matching your criteria.
        Try adjusting your filters or view all profiles in list view.
      </p>
      <div class="mt-6">
        <%= link_to "Clear filters", map_path, class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mr-3" %>
        <%= link_to "View list instead", profiles_path, class: "inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md shadow-sm text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600" %>
      </div>
    </div>
  <% end %>
</div>

<script>
  // Initialize and manage map with OpenStreetMap and Leaflet
  // Only listen for one event to avoid duplicate initializations
  document.addEventListener('turbo:load', initMap);
  
  // Global variables to track map state
  let map;
  let markers = [];
  let mapInitialized = false;
  
  // Debug function to log map state
  function logMapState(message) {
    console.log(`MAP STATE (${message}): initialized=${mapInitialized}, map=${map ? 'exists' : 'null'}, markers=${markers.length}`);
  }
  
  // Clean up map resources on navigation
  document.addEventListener('turbo:before-render', function() {
    logMapState('before cleanup');
    if (map) {
      console.log('Removing map...');
      map.remove();
      map = null;
      markers = [];
      mapInitialized = false;
    }
    logMapState('after cleanup');
  });
  
  function initMap() {
    console.log('initMap called');
    // Only initialize if the map container exists
    const mapContainer = document.getElementById('map');
    if (!mapContainer) {
      console.log('Map container not found, skipping initialization');
      return;
    }
    
    // Avoid re-initializing if already done
    logMapState('before initialization check');
    if (mapInitialized && map) {
      console.log('Map already initialized, skipping');
      return;
    }
    
    // Clear any existing content
    mapContainer.innerHTML = '';
    
    console.log("Initializing map...");
    
    // Create the map
    map = L.map('map').setView([37.0902, -95.7129], 4);
    
    // Add the OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 19
    }).addTo(map);
    
    console.log("Map created, fetching profile data...");
    
    // Fetch profile data for markers
    fetch('<%= map_path(params.permit(:specialization_id, :guest_filter)) %>.json')
      .then(response => {
        console.log("Response received:", response.status);
        return response.json();
      })
      .then(profiles => {
        console.log("Profiles data received:", profiles.length, "profiles");
        if (profiles.length === 0) {
          // No profiles found with geocoding data
          return;
        }
        
        // Add markers for each profile
        const markerGroup = L.featureGroup();
        
        profiles.forEach(profile => {
          // Create custom icon based on podcast guest status
          const icon = L.divIcon({
            className: profile.has_podcast ? 'custom-marker-podcast' : 'custom-marker-regular',
            iconSize: [12, 12],
            iconAnchor: [6, 6],
            popupAnchor: [0, -8]
          });
          
          console.log("Creating marker for:", profile.name, "at", profile.latitude, profile.longitude);
          
          // Create the marker with the custom icon
          const marker = L.marker([profile.latitude, profile.longitude], { icon: icon })
            .addTo(map);
          
          // Prepare pop-up content
          const popupContent = `
            <div class="popup-content">
              <h3>${profile.name}</h3>
              ${profile.company ? `<p>${profile.company}</p>` : ''}
              ${profile.headline ? `<p class="italic">${profile.headline}</p>` : ''}
              
              ${profile.location ? `
                <div class="location">
                  <svg class="inline-block h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  ${profile.location}
                </div>
              ` : ''}
              
              ${profile.specializations.length > 0 ? `
                <div class="tags">
                  ${profile.specializations.map(spec => 
                    `<span class="tag">${spec}</span>`
                  ).join('')}
                </div>
              ` : ''}
              
              <div class="view-profile">
                <a href="${profile.profile_path}">
                  View profile
                  <svg class="inline-block w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                  </svg>
                </a>
              </div>
            </div>
          `;
          
          // Add popup to marker
          marker.bindPopup(popupContent);
          
          // Add to the marker group for bounds calculation
          markerGroup.addLayer(marker);
          
          // Store in markers array for later reference
          markers.push(marker);
        });
        
        // Fit map to show all markers
        if (markers.length > 0) {
          map.fitBounds(markerGroup.getBounds(), {
            padding: [50, 50],
            maxZoom: 12
          });
        }
      })
      .catch(error => {
        console.error('Error fetching profile data:', error);
        mapContainer.innerHTML = `
          <div class="flex items-center justify-center h-70vh bg-red-50 dark:bg-red-900/20 rounded-lg">
            <div class="text-center p-8 max-w-md">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-red-500 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
              </svg>
              <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">Error Loading Map Data</h3>
              <p class="text-gray-600 dark:text-gray-400">We had trouble retrieving the map data. Please try refreshing the page.</p>
            </div>
          </div>
        `;
      });
    
    // Set initialization flag at the end of initialization
    mapInitialized = true;
    logMapState('after complete initialization');
  }
</script>